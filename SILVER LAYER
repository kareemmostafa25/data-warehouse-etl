-------------------------------------------------
-- Create Procedure for Silver Layer
-------------------------------------------------
CREATE OR ALTER PROCEDURE silver.load_silver AS
BEGIN
    ------------------------------------------
    -- 1. CRM_CUST_INFO
    ------------------------------------------
    TRUNCATE TABLE silver.crm_cust_info;

    INSERT INTO silver.crm_cust_info (
        cst_id, cst_key, cst_firstname, cst_lastname,
        cst_marital_status, cst_gndr, cst_create_date,
        record_insert_dt
    )
    SELECT 
        cst_id,
        cst_key,
        UPPER(LEFT(TRIM(cst_firstname),1)) 
            + LOWER(SUBSTRING(TRIM(cst_firstname),2,LEN(TRIM(cst_firstname)))),
        UPPER(LEFT(TRIM(cst_lastname),1)) 
            + LOWER(SUBSTRING(TRIM(cst_lastname),2,LEN(TRIM(cst_lastname)))),
        CASE
            WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Single'
            WHEN UPPER(TRIM(cst_marital_status)) = 'M' THEN 'Married'
            ELSE 'n/a'
        END,
        CASE
            WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
            WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
            ELSE 'n/a'
        END,
        cst_create_date,
        GETDATE()
    FROM (
        SELECT *, ROW_NUMBER() OVER (
            PARTITION BY cst_id ORDER BY cst_create_date DESC
        ) AS flag_last
        FROM bronze.crm_cust_info
        WHERE cst_id IS NOT NULL
    ) t
    WHERE flag_last = 1;


    ------------------------------------------
    -- 2. CRM_PRD_INFO
    ------------------------------------------
    TRUNCATE TABLE silver.crm_prd_info;

    INSERT INTO silver.crm_prd_info (
        prd_id, cat_id, prd_key, prd_nm,
        prd_cost, prd_line, prd_start_dt,
        prd_end_dt, record_insert_dt
    )
    SELECT
        prd_id,
        REPLACE(SUBSTRING(prd_key,1,5),'-','_'),
        SUBSTRING(prd_key,7,LEN(prd_key)),
        prd_nm,
        ISNULL(prd_cost, 0),
        CASE
            WHEN UPPER(TRIM(prd_line)) = 'R' THEN 'Road'
            WHEN UPPER(TRIM(prd_line)) = 'M' THEN 'Mountain'
            WHEN UPPER(TRIM(prd_line)) = 'T' THEN 'Touring'
            WHEN UPPER(TRIM(prd_line)) = 'S' THEN 'Sport'
            ELSE 'n/a'
        END,
        CAST(prd_start_dt AS date),
        CAST(LEAD(prd_start_dt) OVER (
            PARTITION BY prd_key ORDER BY prd_start_dt
        )-1 AS date),
        CAST(GETDATE() AS date)
    FROM bronze.crm_prd_info;


    ------------------------------------------
    -- 3. CRM_SALES_DETAILS
    ------------------------------------------
    TRUNCATE TABLE silver.crm_sales_details;

    INSERT INTO silver.crm_sales_details (
        sls_ord_num, sls_prd_key, sls_cust_id,
        sls_order_dt, sls_ship_dt, sls_due_dt,
        sls_sales, sls_quantity, sls_price,
        record_insert_dt
    )
    SELECT 
        sls_ord_num, sls_prd_key, sls_cust_id,
        CASE
            WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NULL
            ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
        END,
        CASE
            WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 THEN NULL
            ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
        END,
        CASE
            WHEN sls_due_dt = 0 OR LEN(sls_due_dt) != 8 THEN NULL
            ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
        END,
        CASE
            WHEN sls_sales IS NULL 
              OR sls_sales <= 0 
              OR sls_sales != sls_quantity * ABS(sls_price)
            THEN sls_quantity * ABS(sls_price)
            ELSE sls_sales
        END,
        sls_quantity,
        CASE
            WHEN sls_price IS NULL OR sls_price <= 0
                THEN sls_sales / NULLIF(sls_quantity, 0)
            ELSE sls_price
        END,
        GETDATE()
    FROM bronze.crm_sales_details;


    ------------------------------------------
    -- 4. ERP_CUST_AZ12
    ------------------------------------------
    TRUNCATE TABLE silver.erp_cust_az12;

    INSERT INTO silver.erp_cust_az12 (
        cid, bdate, gen, record_insert_dt
    )
    SELECT
        CASE
            WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid,4,LEN(cid))
            ELSE cid
        END,
        CASE
            WHEN bdate > GETDATE() THEN NULL
            ELSE bdate
        END,
        CASE 
            WHEN UPPER(TRIM(gen)) IN ('F','FEMALE') THEN 'Female'
            WHEN UPPER(TRIM(gen)) IN ('M','MALE') THEN 'Male'
            ELSE 'n/a'
        END,
        GETDATE()
    FROM bronze.erp_cust_az12;


    ------------------------------------------
    -- 5. ERP_LOC_A101
    ------------------------------------------
    TRUNCATE TABLE silver.erp_loc_a101;

    INSERT INTO silver.erp_loc_a101 (
        cid, cntry, record_insert_dt
    )
    SELECT 
        REPLACE(cid, '-', ''),
        CASE
            WHEN TRIM(cntry) IN ('DE','Germany') THEN 'Germany'
            WHEN TRIM(cntry) IN ('US','USA','United States') THEN 'United States'
            WHEN cntry LIKE 'France' THEN 'France'
            WHEN cntry LIKE 'Canada' THEN 'Canada'
            WHEN cntry LIKE 'Australia' THEN 'Australia'
            WHEN cntry LIKE 'United Kingdom' THEN 'United Kingdom'
            ELSE 'N/A'
        END,
        GETDATE()
    FROM bronze.erp_loc_a101;


    ------------------------------------------
    -- 6. ERP_PX_CAT_G1V2
    ------------------------------------------
    TRUNCATE TABLE silver.erp_px_cat_g1v2;

    INSERT INTO silver.erp_px_cat_g1v2 (
        id, cat, subcat, maintenance, record_insert_dt
    )
    SELECT 
        id, cat, subcat, maintenance, GETDATE()
    FROM bronze.erp_px_cat_g1v2;

    PRINT '>> Silver Layer Load Completed!';
END;
